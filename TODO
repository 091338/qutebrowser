Before 0.1
==========

- Check FIXMEs
- Manpage
- Website
- Tests for URL detection and fix corner cases
- Fix some crashes if we can
- Fix shutdown
- Maybe test under other platforms
- Autosave feature (against segfaults/...)
- Save tabs feature
- More dwb keybindings
- Use  :open engine searchterm   syntax for searching
- Basic SSL handling
  e.g. broken on https://fsinf.fh-worms.de/
  at least ssl-strict setting and default certs

Crashes
=======

- When following a hint:

  QNetworkReplyImplPrivate::error: Internal problem, this method must only be called once.

- When enabling javascript on http://google.com/accounts and reloading:

    OpenType support missing for script 12

  Then it quits.
  When javascript is enabled already, hangs.
  With minimal browser, prints error but continues to run.

  Also quits on http://de.wikipedia.org/wiki/Hallo-Welt-Programm

  It seems this only happens on Windows.

- Closing some tabs and undo all them -> quits and CMD.exe hangs

    QHttpNetworkConnectionPrivate::_q_hostLookupFinished could not dequeu request

- Clicking the blank area of the grey titlebar of the webinspector closed
  qutebrowser on windows


Bugs
====

- All kind of FIXMEs
- F on duckduckgo result page opens in current page

  It seems we don't get a linkClicked signal there.
  Maybe it does some weird js stuff?
  See also: http://qt-project.org/doc/qt-4.8/qwebpage.html#createWindow
  Asked here: http://stackoverflow.com/q/23498666/2085149

- Shutdown is still flaky.

  Some pointers:
      https://code.google.com/p/webscraping/source/browse/webkit.py
      Simply does setPage(None) in __del__ of webview.

      http://www.tenox.net/out/wrp11-qt.py
      does del self._window; del self._view; del self._page

      http://pydoc.net/Python/grab/0.4.5/ghost.ghost/
      does webview.close(); del self.manager; del self.page; del self.mainframe

- Eliding doesn't work correctly in tabs (cuts off start)
  This especially happens when there's no favicon

- Opening via commandline / startpage doesn't work with absolute file paths.

- Relative file paths and ~ don't work at all.

- Pasting highlighted text (to mrxvt) does not work (iggy).

- Hinting problems on https://bugreports.qt-project.org/secure/Dashboard.jspa
                      http://wiki.gentoo.org/wiki/Lenovo_ThinkPad_T440s (top navbar)

- scroll_page doesn't care about always visible bars, so content gets hidden
  e.g. http://www.mtb-news.de/forum/t/welcher-schuh-five-ten-vs-oneal.529148/

- Hinting with multiple frames doesn't work yet

- Command history seems to be broken


Style
=====

- initialize completion models at some nicer place (not in widget)
- move curcommand stuff to other places (e.g. current widget, etc.)
  maybe rename curcommand to commands or so?
  also some curcommand stuff is in tabbedbrowser, etc.
- rename commands
- reorder config #2
- rework exception hierarchy for config (common base exception)
- use exceptions for error messages in commands

Major features
==============

- Per domain settings
- RequestPolicy
- Plugin architecture
    Adblock?
    RequestPolicy
    Ghostery/Disconnect?
    NoScript
    Certificate Patrol
    https://chrome.google.com/webstore/detail/remove-google-redirects/ccenmflbeofaceccfhhggbagkblihpoh
- Downloads
- session handling / saving
- IPC, like dwb -x
- Bookmarks
- Internationalization
- more completions (URLs, ...)
- SSL handling
- history

Minor features
==============

- reload config command
    - config changed signals for sections (optimization)
- Display metavars for commands in input bar.
- count support for special keys
- --set-as-default argument
- Make inspector height resizable
- Make inspector detachable (own window)
- Enable disk caching
    QNetworkManager.setCache() and use a QNetworkDiskCache probably
- clear cookies
- keybind/aliases should have completion for commands/arguments
- Hiding scrollbars
- Ctrl+A/X to increase/decrease last number in URL
- logging contexts
- Add more element-selection-detection code (with options?) based on:
      -> javascript: http://stackoverflow.com/a/2848120/2085149
      -> microFocusChanged and check active element via:
         frame = page.currentFrame()
         elem = frame.findFirstElement('*:focus')
- somehow unfocus elements (hide blinking cursor) when insert mode is left?
- tabs: some more padding?
- Really fix URL detection properly
- Make it possible to open inspector in a new window.

hints
-----

- bindings for prev/next hint
- more intelligent clicking (end of textfields)
- filter close hints when it's the same link
- ignore keypresses shortly after link following

Useful things
=============

http://www.tenox.net/out/wrp11-qt.py
https://code.google.com/p/webscraping/source/browse/webkit.py
https://github.com/jeanphix/Ghost.py/blob/master/ghost/ghost.py
http://otter-browser.org/

Upstream Bugs
=============

- Printing under windows produced blank pages
    https://bugreports.qt-project.org/browse/QTBUG-19571
    If this isn't fixed in Qt 5.3, bug should be reopened.

- QWebElement needs geometries()
    https://bugreports.qt-project.org/browse/QTBUG-38698

- Impossible to retrieve user value of QWebElement:
    https://bugreports.qt-project.org/browse/QTBUG-38669

- Web inspector is blank unless .hide()/.show() is called.
    Asked on SO: http://stackoverflow.com/q/23499159/2085149

- Weird font rendering
    https://bugreports.qt-project.org/browse/QTBUG-20973
    https://bugreports.qt-project.org/browse/QTBUG-21036
    https://bugreports.qt-project.org/browse/QTBUG-38884

- dead_actute
    https://bugs.freedesktop.org/show_bug.cgi?id=69476

- QNetworkReplyImplPrivate::error: Internal problem, this method must only be called once.
    https://bugreports.qt-project.org/browse/QTBUG-30298


Probably fixed crashes
======================

- Segfault when closing some tab:
    QIODevice::read: device not open
    QIODevice::read: device not open
    QIODevice::read: device not open
    Fatal Python error: Segmentation fault

    Current thread 0x00007ff4ed080700 (most recent call first):
      File "/home/florian/proj/qutebrowser/git/qutebrowser/__main__.py", line 29 in main
      File "/home/florian/proj/qutebrowser/git/qutebrowser/__main__.py", line 33 in <module>
      File "/usr/lib/python3.4/runpy.py", line 86 in _run_code
      File "/usr/lib/python3.4/runpy.py", line 171 in _run_module_as_main

    @ e5000c315dd29ae9356e1b33ed041917c637c85b

    Probably fixed by de7c6a63b48f66e164bf4baa6e892bcbb326d6b9

- When opening a hint with F:

    2014-05-06 09:01:25 [DEBUG] [_tabbedbrowser:tabopen:153] Opening PyQt5.QtCore.QUrl('http://ddg.gg/')
    Traceback (most recent call last):
      File ".\qutebrowser\widgets\_tabbedbrowser.py", line 155, in tabopen
        tab = WebView(self)
      File ".\qutebrowser\widgets\webview.py", line 83, in __init__
        self.page_ = BrowserPage(self)
      File ".\qutebrowser\browser\webpage.py", line 44, in __init__
        self.setNetworkAccessManager(QApplication.instance().networkmanager)
    RuntimeError: wrapped C/C++ object of type NetworkManager has been deleted

    Probably fixed by de7c6a63b48f66e164bf4baa6e892bcbb326d6b9



dwb keybindings to possibly implement
=====================================

window
------

wh
Go back in a new window (command win_hist_back, aliases: winback, wba).

wl
Go forward in a new window (command win_hist_forward, aliases: winforward, wfo).

wB
Show Bookmarks, open bookmark in a new window (command win_bookmarks, aliases: winmarks).

wb[:graph:]
Open quickmark in a new window (command win_quickmark, aliases: winqmarks).

wf
Show hints, open link in a new window. (command hints_win, aliases: winhints, whi).

;R
Rapid hint mode, each matching hint opens a new window. (command hints_rapid_win, aliases: wrhints, wrhi).

wp
Paste from clipboard and load in a new window (command paste_nw, aliases: winpaste).

wP
Paste from primary selection and load in a new window (command paste_primary_nw, aliases: winppaste).

W
Next navigation action will be opened in a new window (command new_win).

wo
Open url in a new instance (command: winopen, aliases: wopen, w).


downloads
---------

;d
Download via hints (command hints_download, aliases: dhints).

[n]ad
Cancel the download with number n or the first download in the lists of running downloads if n is omitted. (command cancel_download).

gd
Download the current site. (command download).

Sd
Show download (command show_downloads, aliases: sdownloads).

Bookmarks/quickmarks
--------------------

M
Add a bookmark (command bookmark, aliases: bmark, bma).

gb
Show Bookmarks (command bookmarks, aliases: bmarks, bmas).

gB
Show Bookmarks, open bookmark in a new tab (command tab_bookmarks, aliases: tabmarks).

m
Add a quickmark (command save_quickmark, aliases: quickmark, qmark).

b
Open quickmark (command quickmark, aliases: qmarks).

B
Open quickmark in a new tab (command tab_quickmark, aliases: tabqmarks).

tab-handling
------------

gt
Show all open tabs. (command buffers, aliases: bu).

[n]C-P
Protect tab [n]. Closing this tab must be confirmed (command protect, aliases: prot).

[n]xd
Lock tab [n]. Locking a tab will lock this tab to the current domain, it’s not possible to navigate to another domain until unlocked. lock_domain, aliases: dlock).

[n]xu
Lock tab [n]. Locking a tab will lock this tab to the current uri, it’s not possible to navigate to another uri until unlocked. lock_uri, aliases: ulock).

Blacklisting
------------

tsh
Toggle scripts for current host permanently (command toggle_scripts_host, aliases: hscript).

tsu
Toggle scripts for current url permanently (command toggle_scripts_uri, aliases: uscript).

tth
Toggle scripts for current host temporarily (command toggle_scripts_host_tmp, aliases: thscript).

ttu
Toggle scripts for current url temporarily (command toggle_scripts_uri_tmp, aliases: tuscript).

ph
Toggle plugins for current host permanently (command toggle_plugins_host, aliases: hplugin).

pu
Toggle plugins for current url permanently (command toggle_plugins_uri, aliases: uplugin).

pth
Toggle plugins for current host temporarily (command toggle_plugins_host_tmp, aliases: thplugin).

ptu
Toggle plugins for current url temporarily (command toggle_plugins_uri_tmp, aliases: tuplugin).

CC
Allow persistent cookie for the current website. The domain will be saved in cookies.allow. Cookies that are allowed by the cookies.allow whitelist are stored in $XDG_CONFIG_HOME/dwb/$profilename/cookies. (command allow_cookie, aliases: cookie).

CS
Allow session cookie for the current website. The domain will be saved in cookies_session.allow. This is only useful if cookies-store-policy is set to never, see cookies-store-policy for details. (command allow_session_cookie, aliases: scookie).

CT
Allow session cookies for the current website temporarily. Only first party cookies are allowed. The domain is not saved to a whitelist and the cookies will not be saved persitently. (command allow_session_cookie_tmp, aliases: tcookie).


Show
----

Sb
Show bookmarks (command show_bookmarks, aliases: sbookmarks).

Sq
Show quickmarks (command show_quickmarks, aliases: squickmarks).

Sh
Show history (command show_history, aliases: shistory).

Sk
Show keys (command show_keys, aliases: skeys).

Ss
Show settings (command show_settings, aliases: ssettings).

eu
Show and execute userscripts (command execute_userscript).


Other
-----

[n]gc
Clear tab n or of current tab, clears the history of the tab and loads about:blank. (command clear_tab, aliases: clear).

th
Go back in a new tab (command tab_hist_back, aliases: tabback, tba).

tl
Go forward in a new tab (command tab_hist_forward, aliases: tabforward, tfo).

c/
Find forward, ignore case (command find_forward_ic, alias: iffind).

c?
Find backward, ignore case (command find_backward_ic, alias ibfind).

[n]R
Reload tab n or current tab if n is omitted without using any cached data (command reload_bypass_cache, aliases: refull).

ZZ
Save current session and exit (command save_session, aliases: wq).

gZZ
Save current session with name and exit (command save_named_session, aliases: wqn).

gf
Toggle "view source" (command view_source, aliases: source, so).

gs
Add a searchengine. Textfields can be chosen with tab and a keyword must be specified. The first defined searchengine will be the default searchengine. The keyword can be used in all open commands, e.g. :open <keyword> <searchterm> (command save_search_field, aliases: search).

C-p
Toggle proxy (command proxy).

V
Next navigation action will be opened in a new tab (command new_tab).

[n]wi
Show the webinspector of tab n or of current tab if n is omitted. Note that enable-developer-extras has to be set. (commmand web_inspector, aliases: inspect, insp).

g.
Toggle hidden files when browsing local filesystem. (command open_editor, aliases: editor).

F11
Toggle fullscreen (command fullscreen, aliases: fs).

F12
Toggle presentation mode. (command presentation_mode, aliases: present).

xx
Toggle visibility of tabbar and statusbar. (command toggle_bars, aliases: bars).

xt
Toggle visibility of tabbar. (command toggle_tabbar, aliases: tbar).

xb
Toggle visibility of statusbar. (command toggle_statusbar, aliases: sbar).

xv
Toggle visibility of a tab. (command visible, aliases: vis).

unbound
Execute a javascript snippet (command execute_javascript, aliases: exja, js).

unbound
Toggle a boolean setting from commandline (command toggle_setting, aliases: toggle, tog).

unbound
Load a html string. This command is mainly intended for use in userscripts (command load_html).

unbound
Load a html string in a new tab. This command is mainly intended for use in userscripts (command load_html_tab).

unbound
Execute a javascript snippet that uses the the internal javascript api. This command only works if the javascript interface is enabled, i.e. if there are scripts in $XDG_CONFIG_HOME/dwb/userscripts that use the api or if dwb is started with -S/--enable-scripts (command eval).

Tab (S-Tab)
In normal mode Tab shows the next (previous) shortcut, that matches the currently entered keysequence. When opening a url, the next (previous) item in command history, bookmarks or history will be completed. In hint mode the next (previous) hint will get focus. Tab also completes settings and shortcut-settings. When initiating a download, full paths (downloads and spawning programs) and binaries (spawning programs) in PATH will be completed. In command mode tab will complete builtin commands and urls if the command accepts an url.
